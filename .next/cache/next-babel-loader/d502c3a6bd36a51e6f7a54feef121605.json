{"ast":null,"code":"import axios from \"axios\";\nimport CookieService from \"../services/CookieService\";\n\nvar https = function https(path) {\n  var created = axios.create({\n    baseURL: \"https://localhost:5001/api\" + path,\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  });\n  created.interceptors.request.use(function (config) {\n    var token = CookieService.getCookies()[\"token\"];\n    config.headers['Authorization'] = 'Bearer ' + token;\n    ;\n    return config;\n  }, function (error) {\n    return Promise.reject(error);\n  });\n  return created;\n};\n\nvar builder = function builder(path) {\n  return {\n    https: https(path)\n  };\n};\n\nexport default builder;","map":{"version":3,"sources":["/home/renzott/Programacion/Personal/React/first-next-page/util/https-base.js"],"names":["axios","CookieService","https","path","created","create","baseURL","headers","interceptors","request","use","config","token","getCookies","error","Promise","reject","builder"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;;AAGA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,IAAD,EAAU;AAEpB,MAAIC,OAAO,GAAGJ,KAAK,CAACK,MAAN,CAAa;AACvBC,IAAAA,OAAO,EAAE,+BAA+BH,IADjB;AAEvBI,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AAFc,GAAb,CAAd;AAOAH,EAAAA,OAAO,CAACI,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CAAkC,UAAAC,MAAM,EAAI;AACxC,QAAIC,KAAK,GAAGX,aAAa,CAACY,UAAd,GAA2B,OAA3B,CAAZ;AACAF,IAAAA,MAAM,CAACJ,OAAP,CAAe,eAAf,IAAkC,YAAYK,KAA9C;AAAoD;AACpD,WAAOD,MAAP;AACH,GAJD,EAKA,UAAAG,KAAK;AAAA,WAAIC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAJ;AAAA,GALL;AAOA,SAAOV,OAAP;AACH,CAjBD;;AAmBA,IAAMa,OAAO,GAAG,SAAVA,OAAU,CAACd,IAAD,EAAU;AACtB,SAAO;AACHD,IAAAA,KAAK,EAAEA,KAAK,CAACC,IAAD;AADT,GAAP;AAGH,CAJD;;AAMA,eAAec,OAAf","sourcesContent":["import axios from \"axios\";\nimport CookieService from \"../services/CookieService\";\n\n\nconst https = (path) => {\n\n    var created = axios.create({\n        baseURL: \"https://localhost:5001/api\" + path,\n        headers: {\n            \"Content-type\": \"application/json\"\n        }\n    });\n\n    created.interceptors.request.use( config => {\n        var token = CookieService.getCookies()[\"token\"];\n        config.headers['Authorization'] = 'Bearer ' + token;;\n        return config\n    },\n    error => Promise.reject(error));\n\n    return created;\n}\n\nconst builder = (path) => {\n    return {\n        https: https(path)\n    }\n};\n\nexport default builder;"]},"metadata":{},"sourceType":"module"}