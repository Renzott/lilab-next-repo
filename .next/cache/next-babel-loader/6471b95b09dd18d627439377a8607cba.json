{"ast":null,"code":"import axios from \"axios\";\nimport CookieService from \"../services/CookieService\";\n\nvar https = function https(path) {\n  return axios.create({\n    baseURL: \"https://localhost:5001/api\" + path,\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  }).interceptors.request.use(function (config) {\n    var token = CookieService.getCookies()[\"token\"];\n\n    if (token != null && token != undefined) {\n      config.headers.authorization = token;\n    }\n  }, function (error) {\n    return Promise.reject(error);\n  });\n};\n\nvar builder = function builder(path) {\n  return {\n    https: https(path)\n  };\n};\n\nexport default builder;","map":{"version":3,"sources":["/home/renzott/Programacion/Personal/React/first-next-page/util/https-base.js"],"names":["axios","CookieService","https","path","create","baseURL","headers","interceptors","request","use","config","token","getCookies","undefined","authorization","error","Promise","reject","builder"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;;AAGA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,IAAD,EAAU;AAEpB,SAAOH,KAAK,CAACI,MAAN,CAAa;AAChBC,IAAAA,OAAO,EAAE,+BAA+BF,IADxB;AAEhBG,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AAFO,GAAb,EAKJC,YALI,CAKSC,OALT,CAKiBC,GALjB,CAKsB,UAAAC,MAAM,EAAI;AACnC,QAAIC,KAAK,GAAGV,aAAa,CAACW,UAAd,GAA2B,OAA3B,CAAZ;;AACA,QAAGD,KAAK,IAAI,IAAT,IAAiBA,KAAK,IAAIE,SAA7B,EAAuC;AACnCH,MAAAA,MAAM,CAACJ,OAAP,CAAeQ,aAAf,GAA+BH,KAA/B;AACH;AACJ,GAVM,EAWP,UAAAI,KAAK;AAAA,WAAIC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAJ;AAAA,GAXE,CAAP;AAYH,CAdD;;AAgBA,IAAMG,OAAO,GAAG,SAAVA,OAAU,CAACf,IAAD,EAAU;AACtB,SAAO;AACHD,IAAAA,KAAK,EAAEA,KAAK,CAACC,IAAD;AADT,GAAP;AAGH,CAJD;;AAMA,eAAee,OAAf","sourcesContent":["import axios from \"axios\";\nimport CookieService from \"../services/CookieService\";\n\n\nconst https = (path) => {\n\n    return axios.create({\n        baseURL: \"https://localhost:5001/api\" + path,\n        headers: {\n            \"Content-type\": \"application/json\"\n        }\n    }).interceptors.request.use( config => {\n        var token = CookieService.getCookies()[\"token\"];\n        if(token != null && token != undefined){\n            config.headers.authorization = token;\n        }\n    },\n    error => Promise.reject(error));\n}\n\nconst builder = (path) => {\n    return {\n        https: https(path)\n    }\n};\n\nexport default builder;"]},"metadata":{},"sourceType":"module"}